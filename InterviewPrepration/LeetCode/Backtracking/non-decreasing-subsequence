//Input: nums = [4,6,7,7]
//Output: [[4,6],[4,6,7],[4,6,7,7],[4,7],[4,7,7],[6,7],[6,7,7],[7,7]]

public class Solution{
    public List<List<Integer>> findSubsequences(int[] nums){
        Set<List<Integer>> result = new HashSet<>();
        backtrack(nums, 0, new ArrayList<>(), result);
        return new ArrayList<>(result);
    }
    private void backtrack(int[] nums, int start, List<Integer> current, Set<List<Integer>> result){
        if(current.size() > 1)
        result.add(new ArrayList<>(current));

        for(int i = start, i< nums.length;i++)
        {
            if(current.isEmpty() || nums[i] >= current.get(current.size() -1)){
                current.add(nums[i];
                backtrack(nums, i+1, current, result);
                current.remove(current.size() -1);
            }
        }
    }

}